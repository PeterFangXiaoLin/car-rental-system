<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.mapper.VehicleMapper">

    <resultMap id="BaseResultMap" type="com.my.domain.entity.Vehicle">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="vehicleNo" column="vehicleNo" jdbcType="VARCHAR"/>
            <result property="brandId" column="brandId" jdbcType="BIGINT"/>
            <result property="modelId" column="modelId" jdbcType="BIGINT"/>
            <result property="energyTypeId" column="energyTypeId" jdbcType="BIGINT"/>
            <result property="vehicleTypeId" column="vehicleTypeId" jdbcType="BIGINT"/>
            <result property="productionYear" column="productionYear" jdbcType="INTEGER"/>
            <result property="dailyPrice" column="dailyPrice" jdbcType="DECIMAL"/>
            <result property="seatCount" column="seatCount" jdbcType="INTEGER"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="imageUrl" column="imageUrl" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,vehicleNo,
        brandId,modelId,energyTypeId,
        vehicleTypeId,productionYear,dailyPrice,
        seatCount,status,imageUrl,
        description,createTime,updateTime,
        isDelete
    </sql>
    <select id="selectPageVO" resultType="com.my.domain.vo.VehicleVO">
        select
            vehicle.id,
            vehicle.name,
            vehicle.vehicleNo,
            vehicle.brandId,
            vb.brandName as brandName,
            vehicle.modelId,
            vm.modelName as modelName,
            vehicle.vehicleTypeId,
            vtd.typeName as vehicleTypeName,
            vehicle.energyTypeId,
            etd.typeName as energyTypeName,
            vehicle.productionYear,
            vehicle.dailyPrice,
            vehicle.seatCount,
            vehicle.status,
            vehicle.imageUrl,
            vehicle.description,
            vehicle.createTime
        from
            vehicle
        inner join
            vehicle_brand as vb on vehicle.brandId = vb.id and vb.isDelete = 0
        inner join
            vehicle_model as vm on vehicle.modelId = vm.id and vm.isDelete = 0
        inner join
            energy_type_dict as etd on vehicle.energyTypeId = etd.id and etd.isDelete = 0
        inner join
            vehicle_type_dict as vtd on vehicle.vehicleTypeId = vtd.id and vtd.isDelete = 0
        where
            vehicle.isDelete = 0
        <if test="req.searchText != null and req.searchText != ''">
            and (
                vehicle.name like concat('%', #{req.searchText}, '%')
                or vb.brandName like concat('%', #{req.searchText}, '%')
                or vm.modelName like concat('%', #{req.searchText}, '%')
                or vtd.typeName like concat('%', #{req.searchText}, '%')
                or etd.typeName like concat('%', #{req.searchText}, '%')
            )
        </if>
        <if test="req.id != null">
            and vehicle.id = #{req.id}
        </if>
        <if test="req.brandId != null">
            and vehicle.brandId = #{req.brandId}
        </if>
        <if test="req.modelId!= null">
            and vehicle.modelId = #{req.modelId}
        </if>
        <if test="req.name != null and req.name != ''">
            and vehicle.name like concat('%', #{req.name}, '%')
        </if>
        <if test="req.vehicleNo!= null and req.vehicleNo!= ''">
            and vehicle.vehicleNo like concat('%', #{req.vehicleNo}, '%')
        </if>
        <if test="req.vehicleTypeId!= null">
            and vehicle.vehicleTypeId = #{req.vehicleTypeId}
        </if>
        <if test="req.energyTypeId!= null">
            and vehicle.energyTypeId = #{req.energyTypeId}
        </if>
        <if test="req.minDailyPrice!= null">
            and vehicle.dailyPrice &gt;= #{req.minDailyPrice}
        </if>
        <if test="req.maxDailyPrice!= null">
            and vehicle.dailyPrice &lt;= #{req.maxDailyPrice}
        </if>
        <if test="req.seatCount!= null">
            and vehicle.seatCount = #{req.seatCount}
        </if>
        <if test="req.status!= null">
            and vehicle.status = #{req.status}
        </if>
        <if test="req.description!= null and req.description!= ''">
            and vehicle.description like concat('%', #{req.description}, '%')
        </if>
        <if test="req.sortField != null and req.sortField!= ''">
            order by #{req.sortField}
            <if test="req.sortOrder!= null and req.sortOrder == 'descend'">
                desc
            </if>
        </if>
    </select>
    <select id="selectHotVehicles" resultType="com.my.domain.vo.VehicleVO">
        SELECT v.*,
               b.brandName as brandName,
               m.modelName as modelName,
               vt.typeName as vehicleTypeName,
               et.typeName as energyTypeName
        FROM vehicle v
                 LEFT JOIN vehicle_brand b ON v.brandId = b.id
                 LEFT JOIN vehicle_model m ON v.modelId = m.id
                 LEFT JOIN vehicle_type_dict vt ON v.vehicleTypeId = vt.id
                 LEFT JOIN energy_type_dict et ON v.energyTypeId = et.id
                 LEFT JOIN (
            -- 计算车辆热度，将浏览、收藏、下单数量加权
            SELECT
                vehicleId,
                SUM(CASE WHEN source = 'browse' THEN 1 ELSE 0 END) AS browse_count,
                SUM(CASE WHEN source = 'favorite' THEN 3 ELSE 0 END) AS favorite_count,
                SUM(CASE WHEN source = 'order' THEN 5 ELSE 0 END) AS order_count,
                (SUM(CASE WHEN source = 'browse' THEN 1 ELSE 0 END) +
                 SUM(CASE WHEN source = 'favorite' THEN 3 ELSE 0 END) +
                 SUM(CASE WHEN source = 'order' THEN 5 ELSE 0 END)) AS hotness
            FROM (
                     SELECT vehicleId, 'browse' as source FROM vehicle_browsing_history
                     UNION ALL
                     SELECT vehicleId, 'favorite' as source FROM vehicle_favorite
                     UNION ALL
                     SELECT vehicleId, 'order' as source FROM rental_order
                 ) all_interactions
            GROUP BY vehicleId
        ) hotness ON v.id = hotness.vehicleId
        WHERE v.isDelete = 0
        ORDER BY IFNULL(hotness.hotness, 0) DESC, v.createTime DESC
    </select>
    <select id="selectRandomVehicles" resultType="com.my.domain.vo.VehicleVO">
        SELECT v.*,
               b.brandName as brandName,
               m.modelName as modelName,
               vt.typeName as vehicleTypeName,
               et.typeName as energyTypeName
        FROM vehicle v
                 LEFT JOIN vehicle_brand b ON v.brandId = b.id
                 LEFT JOIN vehicle_model m ON v.modelId = m.id
                 LEFT JOIN vehicle_type_dict vt ON v.vehicleTypeId = vt.id
                 LEFT JOIN energy_type_dict et ON v.energyTypeId = et.id
        WHERE v.isDelete = 0
          AND v.status = 1 /* 可用状态的车辆 */
        ORDER BY RAND() /* 使用MySQL的RAND()函数实现随机排序 */
        LIMIT #{count}
    </select>
    <select id="selectHotVehicleIds" resultType="java.lang.Long">
        SELECT vehicleId
        FROM (
                 SELECT
                     vehicleId,
                     (SUM(CASE WHEN source = 'browse' THEN 1 ELSE 0 END) +
                      SUM(CASE WHEN source = 'favorite' THEN 3 ELSE 0 END) +
                      SUM(CASE WHEN source = 'order' THEN 5 ELSE 0 END)) AS hotness
                 FROM (
                          SELECT vehicleId, 'browse' as source FROM vehicle_browsing_history
                          UNION ALL
                          SELECT vehicleId, 'favorite' as source FROM vehicle_favorite
                          UNION ALL
                          SELECT vehicleId, 'order' as source FROM rental_order
                      ) all_interactions
                 GROUP BY vehicleId
             ) ranked
        ORDER BY hotness DESC
        LIMIT #{limit}
    </select>
    <select id="countByBrandId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM vehicle
        WHERE brandId = #{brandId}
          AND isDelete = 0
    </select>
    <select id="countByModelId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM vehicle
        WHERE modelId = #{modelId}
          AND isDelete = 0
    </select>
    <select id="countByTypeId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM vehicle
        WHERE vehicleTypeId = #{vehicleTypeId}
          AND isDelete = 0
    </select>
    <select id="countByEnergyTypeId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM vehicle
        WHERE energyTypeId = #{energyTypeId}
          AND isDelete = 0
    </select>
</mapper>
